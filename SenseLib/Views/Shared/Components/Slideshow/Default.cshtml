@model IEnumerable<SenseLib.Models.Slideshow>

<style>
    /* Slideshow hiện đại */
    #slideshow-container {
        margin: 0;
        padding: 0;
        border-radius: 0;
        overflow: hidden;
        position: relative;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }
    
    .carousel-inner {
        height: 75vh;
        max-height: 700px;
        border-radius: 0 0 10px 10px;
    }
    
    .carousel-item {
        position: relative;
        height: 75vh;
        max-height: 700px;
        background-color: #000;
        transition: transform 0.6s ease-in-out;
    }
    
    .carousel-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        opacity: 0.85;
        filter: brightness(0.9);
        transition: transform 1.2s ease, filter 0.8s ease;
    }
    
    .carousel-item:hover img {
        filter: brightness(1);
        transform: scale(1.02);
    }
    
    /* Indicators điều hướng mới */
    .carousel-indicators {
        margin-bottom: 1.5rem;
        z-index: 20;
    }
    
    .carousel-indicators button {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.6);
        border: none;
        margin: 0 5px;
        transition: all 0.3s ease;
    }
    
    .carousel-indicators button.active {
        background-color: var(--secondary-color);
        transform: scale(1.3);
        box-shadow: 0 0 10px rgba(77, 152, 224, 0.7);
    }
    
    /* Điều khiển trái/phải */
    .carousel-control-prev, .carousel-control-next {
        width: 8%;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    #slideshow-container:hover .carousel-control-prev,
    #slideshow-container:hover .carousel-control-next {
        opacity: 0.8;
    }
    
    .carousel-control-prev-icon, .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-size: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }
    
    .carousel-control-prev:hover .carousel-control-prev-icon,
    .carousel-control-next:hover .carousel-control-next-icon {
        background-color: var(--secondary-color);
        transform: scale(1.1);
    }
    
    /* Tùy chỉnh responsive */
    @@media (max-width: 992px) {
        .carousel-item, .carousel-inner {
            height: 60vh;
            max-height: 600px;
        }
    }
    
    @@media (max-width: 768px) {
        .carousel-item, .carousel-inner {
            height: 55vh;
            max-height: 500px;
        }
        
        .carousel-control-prev-icon, .carousel-control-next-icon {
            width: 35px;
            height: 35px;
        }
    }

    @@media (max-width: 576px) {
        .carousel-item, .carousel-inner {
            height: 50vh;
            max-height: 400px;
        }
        
        .carousel-control-prev-icon, .carousel-control-next-icon {
            width: 30px;
            height: 30px;
        }
    }
</style>

@if (Model != null && Model.Any())
{
    <div id="slideshow-container" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-indicators">
            @for (int i = 0; i < Model.Count(); i++)
            {
                <button type="button" data-bs-target="#slideshow-container" 
                        data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" 
                        aria-current="@(i == 0 ? "true" : "false")"
                        aria-label="Slide @(i+1)"></button>
            }
        </div>
        
        <div class="carousel-inner">
            @{ 
                bool isFirst = true;
            }
            @foreach (var slide in Model)
            {
                <div class="carousel-item @(isFirst ? "active" : "")">
                    @if (!string.IsNullOrEmpty(slide.Link))
                    {
                        <a href="@slide.Link" target="_blank">
                            <img src="@slide.ImagePath" class="d-block w-100">
                        </a>
                    }
                    else
                    {
                        <img src="@slide.ImagePath" class="d-block w-100">
                    }
                </div>
                
                isFirst = false;
            }
        </div>
        
        <button class="carousel-control-prev" type="button" data-bs-target="#slideshow-container" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#slideshow-container" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
} 