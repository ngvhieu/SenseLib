@model IEnumerable<SenseLib.Models.Favorite>
@{
    ViewData["Title"] = "Tài liệu yêu thích";
}

<style>
    .page-banner {
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        padding: 2rem 0;
        color: white;
        position: relative;
        overflow: hidden;
    }
    
    .page-banner::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url('/img/pattern.png');
        opacity: 0.1;
    }
    
    .page-banner h1 {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        position: relative;
    }
    
    .content-wrapper {
        background-color: #f8f9fa;
        padding: 2rem 0;
        min-height: 500px;
    }
    
    .nav-tabs {
        border-bottom: 2px solid #ddd;
        margin-bottom: 1.5rem;
    }
    
    .nav-tabs .nav-link {
        border: none;
        color: #555;
        padding: 0.8rem 1.5rem;
        font-weight: 500;
        border-bottom: 2px solid transparent;
        margin-bottom: -2px;
    }
    
    .nav-tabs .nav-link:hover {
        border-color: transparent;
        color: var(--primary-color);
    }
    
    .nav-tabs .nav-link.active {
        border-color: transparent;
        border-bottom: 2px solid var(--primary-color);
        color: var(--primary-color);
    }
    
    .favorite-card {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 1.5rem;
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex;
        flex-direction: column;
    }
    
    .favorite-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .favorite-card-image {
        width: 100%;
        height: 180px;
        object-fit: cover;
    }
    
    .favorite-card-content {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }
    
    .favorite-card-title {
        margin: 0 0 0.5rem;
        font-weight: 500;
    }
    
    .favorite-card-meta {
        margin-bottom: 0.5rem;
        color: #777;
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        font-size: 0.9rem;
    }
    
    .favorite-card-description {
        color: #666;
        margin-bottom: 1rem;
        flex-grow: 1;
    }
    
    .favorite-card-actions {
        display: flex;
        gap: 0.5rem;
        margin-top: auto;
    }
    
    .favorite-card-actions .btn {
        flex: 1;
        font-size: 0.9rem;
    }
    
    .favorite-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1.5rem;
    }
    
    .pagination {
        margin-top: 2rem;
    }
    
    .empty-message {
        text-align: center;
        padding: 2rem;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
    
    @@media (max-width: 992px) {
        .favorite-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    
    @@media (max-width: 768px) {
        .favorite-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<section class="page-banner">
    <div class="container">
        <h1>Lịch sử tài liệu</h1>
    </div>
</section>

<section class="content-wrapper">
    <div class="container">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("Downloads", "User")">Lịch sử tải xuống</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="@Url.Action("Favorites", "User")">Tài liệu yêu thích</a>
            </li>
        </ul>
        
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-check-circle me-2"></i> @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        <div class="tab-content">
            <div class="tab-pane fade show active">
                @if (Model != null && Model.Any())
                {
                    <div class="favorite-grid">
                        @foreach (var favorite in Model)
                        {
                            if (favorite?.Document != null)
                            {
                                <div class="favorite-card">
                                    <img src="@(string.IsNullOrEmpty(favorite.Document.ImagePath) ? 
                                              (string.IsNullOrEmpty(favorite.Document.FilePath) ? "/images/document-placeholder.jpg" : favorite.Document.FilePath) 
                                              : favorite.Document.ImagePath)" alt="@favorite.Document.Title" class="favorite-card-image">
                                    <div class="favorite-card-content">
                                        <h5 class="favorite-card-title">@favorite.Document.Title</h5>
                                        <div class="favorite-card-meta">
                                            <span><i class="fas fa-user"></i> @(favorite.Document.Author?.AuthorName ?? "Không xác định")</span>
                                            <span><i class="fas fa-folder"></i> @(favorite.Document.Category?.CategoryName ?? "Không xác định")</span>
                                            <span><i class="fas fa-download"></i> @(favorite.Document.Downloads?.Count ?? 0) lượt tải</span>
                                        </div>
                                        <p class="favorite-card-description">
                                            @(string.IsNullOrEmpty(favorite.Document.Description) ? "Không có mô tả" : 
                                            (favorite.Document.Description.Length > 100 ? favorite.Document.Description.Substring(0, 100) + "..." : favorite.Document.Description))
                                        </p>
                                        <div class="favorite-card-actions">
                                            <a asp-controller="Document" asp-action="Details" asp-route-id="@favorite.DocumentID" class="btn btn-light">
                                                <i class="fas fa-info-circle"></i> Chi tiết
                                            </a>
                                            <a asp-controller="Document" asp-action="Read" asp-route-id="@favorite.DocumentID" class="btn">
                                                <i class="fas fa-book-reader"></i> Đọc
                                            </a>
                                            <button type="button" class="btn btn-danger favorite-btn" data-document-id="@favorite.DocumentID" data-is-favorite="true">
                                                <i class="fas fa-heart"></i> Bỏ thích
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    
                    @if (ViewBag.TotalPages > 1)
                    {
                        <div class="pagination justify-content-center">
                            <ul class="pagination">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Favorites", new { page = ViewBag.CurrentPage - 1 })">Trước</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">Trước</span>
                                    </li>
                                }

                                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Favorites", new { page = i })">@i</a>
                                    </li>
                                }

                                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Favorites", new { page = ViewBag.CurrentPage + 1 })">Sau</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">Sau</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-message">
                        <i class="fas fa-heart fa-3x text-danger mb-3"></i>
                        <h4>Bạn chưa có tài liệu yêu thích nào</h4>
                        <p class="text-muted">Hãy duyệt qua các tài liệu và đánh dấu yêu thích để dễ dàng xem lại sau này</p>
                        <a asp-controller="Document" asp-action="Index" class="btn btn-primary mt-3">
                            <i class="fas fa-search me-1"></i> Tìm tài liệu ngay
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log('Script Favorites đã sẵn sàng');
            
            // Lấy token từ hidden field
            var token = $('input[name="__RequestVerificationToken"]').val();
            console.log('AntiForgeryToken:', token ? 'Hợp lệ' : 'Không tìm thấy');
            
            // Xử lý xóa tài liệu khỏi yêu thích
            $('.favorite-btn').click(function() {
                var btn = $(this);
                var documentId = btn.data('document-id');
                var card = btn.closest('.favorite-card');
                
                console.log('Bắt đầu toggle yêu thích cho tài liệu ID:', documentId);
                
                // Hiển thị trạng thái đang xử lý
                var originalHtml = btn.html();
                btn.html('<i class="fa fa-spinner fa-spin"></i>');
                btn.prop('disabled', true);
                
                $.ajax({
                    url: '@Url.Action("ToggleFavoriteAjax", "Document")',
                    type: 'POST',
                    headers: { 
                        'RequestVerificationToken': token 
                    },
                    data: {
                        id: documentId,
                        __RequestVerificationToken: token
                    },
                    success: function(result) {
                        console.log('Kết quả Ajax:', result);
                        
                        if (result.success) {
                            // Nếu là bỏ yêu thích thành công thì xóa card khỏi giao diện
                            if (!result.isFavorite) {
                                console.log('Đã bỏ yêu thích, xóa card');
                                // Hiển thị thông báo thành công
                                showAlert('success', '<i class="fa fa-check-circle me-2"></i> Đã xóa khỏi danh sách yêu thích');
                                
                                // Xóa card với hiệu ứng
                                card.fadeOut(300, function() {
                                    card.remove();
                                    
                                    // Kiểm tra nếu không còn tài liệu nào
                                    if ($('.favorite-card').length === 0) {
                                        console.log('Không còn tài liệu yêu thích, tải lại trang');
                                        location.reload(); // Tải lại trang để hiển thị thông báo không có tài liệu
                                    }
                                });
                            } else {
                                // Trong trường hợp vẫn là yêu thích, không xóa card
                                console.log('Vẫn là yêu thích, không xóa card');
                                showAlert('info', '<i class="fa fa-info-circle me-2"></i> Đã cập nhật trạng thái yêu thích');
                                
                                // Khôi phục nút
                                btn.html(originalHtml);
                                btn.prop('disabled', false);
                            }
                        } else {
                            // Hiển thị lỗi
                            console.error('Lỗi từ API:', result.message);
                            var errorMessage = result.message;
                            if (result.details) {
                                errorMessage += ' (' + result.details + ')';
                                console.error('Chi tiết lỗi:', result.details);
                            }
                            
                            showAlert('danger', '<i class="fa fa-exclamation-triangle me-2"></i> ' + errorMessage);
                            
                            // Khôi phục nút
                            btn.html(originalHtml);
                            btn.prop('disabled', false);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Lỗi AJAX:', xhr.responseText, status, error);
                        console.log('Response Headers:', xhr.getAllResponseHeaders());
                        showAlert('danger', '<i class="fa fa-exclamation-triangle me-2"></i> Đã xảy ra lỗi: ' + error);
                        
                        // Khôi phục nút
                        btn.html(originalHtml);
                        btn.prop('disabled', false);
                    }
                });
            });
            
            // Hàm hiển thị thông báo
            function showAlert(type, message) {
                console.log('Hiển thị thông báo:', type, message);
                // Xóa thông báo cũ nếu có
                $('.alert-container .alert').alert('close');
                
                // Tạo thông báo mới
                var alert = $('<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert">' +
                    message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                    '</div>');
                
                // Kiểm tra xem đã có container chưa
                if ($('.alert-container').length === 0) {
                    // Tạo container cho thông báo
                    var container = $('<div class="alert-container" style="position: fixed; top: 20px; right: 20px; z-index: 1050; max-width: 350px;"></div>');
                    $('body').append(container);
                }
                
                // Thêm thông báo vào container
                $('.alert-container').append(alert);
                
                // Tự động đóng thông báo sau 3 giây
                setTimeout(function() {
                    alert.alert('close');
                }, 3000);
            }
        });
    </script>
    
    @* Thêm Anti-Forgery Token ở đây *@
    @Html.AntiForgeryToken()
}