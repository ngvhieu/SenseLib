@{
    ViewData["Title"] = "Báo cáo doanh thu";
    Layout = "_AdminLayout";
    
    var daysSelected = ViewBag.DaysSelected;
    var labels = ViewBag.Labels;
    var revenueData = ViewBag.RevenueData;
    var countData = ViewBag.CountData;
    var categoryRevenue = ViewBag.CategoryRevenue;
    var totalRevenue = ViewBag.TotalRevenue;
    var totalTransactions = ViewBag.TotalTransactions;
    var completedTransactions = ViewBag.CompletedTransactions;
    var topSellingDocuments = ViewBag.TopSellingDocuments;
}

<section class="section dashboard">
    <div class="row">
        <div class="col-lg-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="card-title">Báo cáo doanh thu</h5>
                <a href="@Url.Action("Index", "Purchase", new { area = "Admin" })" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Quay lại
                </a>
            </div>

            <div class="row mb-4">
                <div class="col-xl-4 col-md-6">
                    <div class="card info-card revenue-card">
                        <div class="card-body">
                            <h5 class="card-title">Tổng doanh thu</h5>
                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-currency-exchange"></i>
                                </div>
                                <div class="ps-3">
                                    <h6>@totalRevenue.ToString("N0") ₫</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-xl-4 col-md-6">
                    <div class="card info-card sales-card">
                        <div class="card-body">
                            <h5 class="card-title">Giao dịch thành công</h5>
                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="ps-3">
                                    <h6>@completedTransactions</h6>
                                    @if (totalTransactions > 0)
                                    {
                                        <span class="text-success small pt-1 fw-bold">@((completedTransactions * 100 / totalTransactions).ToString("0.##"))%</span>
                                        <span class="text-muted small pt-2 ps-1">tỉ lệ thành công</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-xl-4 col-md-12">
                    <div class="card info-card customers-card">
                        <div class="card-body">
                            <h5 class="card-title">Khoảng thời gian</h5>
                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-calendar-range"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <form asp-action="Reports" method="get" class="d-flex gap-2 align-items-center">
                                        <select class="form-select form-select-sm" name="days" onchange="this.form.submit()">
                                            @if (daysSelected == 7)
                                            {
                                                <option value="7" selected>7 ngày</option>
                                            }
                                            else
                                            {
                                                <option value="7">7 ngày</option>
                                            }
                                            
                                            @if (daysSelected == 30)
                                            {
                                                <option value="30" selected>30 ngày</option>
                                            }
                                            else
                                            {
                                                <option value="30">30 ngày</option>
                                            }
                                            
                                            @if (daysSelected == 90)
                                            {
                                                <option value="90" selected>90 ngày</option>
                                            }
                                            else
                                            {
                                                <option value="90">90 ngày</option>
                                            }
                                            
                                            @if (daysSelected == 365)
                                            {
                                                <option value="365" selected>1 năm</option>
                                            }
                                            else
                                            {
                                                <option value="365">1 năm</option>
                                            }
                                        </select>
                                        <button type="submit" class="btn btn-sm btn-primary">
                                            <i class="bi bi-search"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xl-8 col-lg-7">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Doanh thu theo ngày (@daysSelected ngày gần nhất)</h5>
                            <div id="revenue-chart-container" style="height: 350px; position: relative;">
                                <canvas id="revenueChart"></canvas>
                                <div id="revenue-chart-loading" class="text-center p-5">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Đang tải...</span>
                                    </div>
                                    <p class="mt-2">Đang tải biểu đồ...</p>
                                </div>
                                <div id="revenue-chart-error" class="alert alert-danger mt-3" style="display: none;">
                                    Không thể hiển thị biểu đồ doanh thu. <span id="revenue-chart-error-details"></span>
                                </div>
                                <div id="revenue-chart-debug" class="alert alert-info mt-3" style="display: none; font-size: 12px; overflow: auto; max-height: 150px;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-4 col-lg-5">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Doanh thu theo danh mục</h5>
                            <div id="category-chart-container" style="height: 350px; position: relative;">
                                <canvas id="categoryChart"></canvas>
                                <div id="category-chart-loading" class="text-center p-5">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Đang tải...</span>
                                    </div>
                                    <p class="mt-2">Đang tải biểu đồ...</p>
                                </div>
                                <div id="category-chart-error" class="alert alert-danger mt-3" style="display: none;">
                                    Không thể hiển thị biểu đồ danh mục. <span id="category-chart-error-details"></span>
                                </div>
                                <div id="category-chart-debug" class="alert alert-info mt-3" style="display: none; font-size: 12px; overflow: auto; max-height: 150px;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-body">
                    <h5 class="card-title">Top 5 tài liệu bán chạy nhất</h5>
                    
                    <div class="table-responsive">
                        <table class="table table-striped table-hover datatable">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Tài liệu</th>
                                    <th>Tác giả</th>
                                    <th>Số lượt mua</th>
                                    <th>Doanh thu</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (topSellingDocuments != null)
                                {
                                    int rank = 1;
                                    foreach (var doc in topSellingDocuments)
                                    {
                                        <tr>
                                            <td>
                                                @if (rank == 1)
                                                {
                                                    <span class="badge bg-warning text-dark">1</span>
                                                }
                                                else if (rank == 2)
                                                {
                                                    <span class="badge bg-secondary">2</span>
                                                }
                                                else if (rank == 3)
                                                {
                                                    <span class="badge" style="background-color: #cd7f32;">3</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-light text-dark">@rank</span>
                                                }
                                            </td>
                                            <td>
                                                <div style="max-width: 300px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis" title="@doc.Title">
                                                    @doc.Title
                                                </div>
                                            </td>
                                            <td>@doc.Author</td>
                                            <td class="text-center">@doc.Count</td>
                                            <td class="text-end">@doc.Revenue.ToString("N0") ₫</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "Document", new { id = doc.DocumentID, area = "" })" class="btn btn-primary btn-sm" target="_blank">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                        rank++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script>
        $(document).ready(function() {
            // Phân tích dữ liệu JSON từ server
            const rawLabels = @Html.Raw(Json.Serialize(labels));
            const rawRevenueData = @Html.Raw(Json.Serialize(revenueData));
            const rawCountData = @Html.Raw(Json.Serialize(countData));
            const rawCategoryData = @Html.Raw(Json.Serialize(categoryRevenue));
            
            // Debug dữ liệu
            const debugInfo = {
                labels: rawLabels,
                revenueData: rawRevenueData,
                countData: rawCountData,
                categoryData: rawCategoryData
            };
            
            $('#revenue-chart-debug').html(
                '<strong>Debug Data:</strong><br>' +
                'Labels: ' + JSON.stringify(rawLabels) + '<br>' +
                'Revenue: ' + JSON.stringify(rawRevenueData) + '<br>' +
                'Count: ' + JSON.stringify(rawCountData)
            );
            
            $('#category-chart-debug').html(
                '<strong>Debug Data:</strong><br>' +
                'Category: ' + JSON.stringify(rawCategoryData)
            );
            
            // Hiển thị debug info khi cần
            if (window.location.search.includes('debug=true')) {
                $('#revenue-chart-debug, #category-chart-debug').show();
            }

            // Khởi tạo DataTable
            $('.datatable').DataTable({
                "language": {
                    "lengthMenu": "Hiển thị _MENU_ mục",
                    "zeroRecords": "Không tìm thấy dữ liệu",
                    "info": "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                    "infoEmpty": "Không có dữ liệu",
                    "infoFiltered": "(lọc từ _MAX_ mục)",
                    "search": "Tìm kiếm:",
                    "paginate": {
                        "first": "Đầu",
                        "last": "Cuối",
                        "next": "Sau",
                        "previous": "Trước"
                    }
                },
                "paging": true,
                "ordering": true,
                "order": [[ 3, "desc" ]],
                "info": true,
                "pageLength": 5
            });
            
            // Cấu hình màu sắc
            const colors = {
                revenue: '#4e73df',
                count: '#1cc88a',
                categories: [
                    '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b',
                    '#fd7e14', '#6f42c1', '#20c9a6', '#5a5c69', '#858796'
                ]
            };
            
            // Chức năng hiển thị lỗi
            function showError(chartId, errorMsg, error) {
                console.error(errorMsg, error);
                $(`#${chartId}-loading`).hide();
                $(`#${chartId}-error`).show();
                $(`#${chartId}-error-details`).text(error.message || 'Vui lòng tải lại trang.');
            }
            
            // Tạo dữ liệu giả nếu không có dữ liệu thật
            function createDummyData() {
                const dummyLabels = ["T2", "T3", "T4", "T5", "T6", "T7", "CN"];
                const dummyRevenue = [0, 0, 0, 0, 0, 0, 0];
                const dummyCount = [0, 0, 0, 0, 0, 0, 0];
                const dummyCategory = [
                    { category: "Không có dữ liệu", revenue: 100 }
                ];
                
                return {
                    labels: dummyLabels,
                    revenueData: dummyRevenue,
                    countData: dummyCount,
                    categoryData: dummyCategory
                };
            }
            
            // Kiểm tra dữ liệu
            function hasValidData(data) {
                return data && Array.isArray(data) && data.length > 0;
            }
            
            // Tạo biểu đồ doanh thu
            function renderRevenueChart() {
                try {
                    // Lấy phần tử canvas
                    const canvas = document.getElementById('revenueChart');
                    if (!canvas) {
                        throw new Error("Không tìm thấy phần tử canvas");
                    }
                    
                    // Xác định dữ liệu
                    let chartData;
                    if (hasValidData(rawLabels) && hasValidData(rawRevenueData)) {
                        chartData = {
                            labels: rawLabels,
                            revenueData: rawRevenueData,
                            countData: hasValidData(rawCountData) ? rawCountData : Array(rawLabels.length).fill(0)
                        };
                    } else {
                        chartData = createDummyData();
                        $('#revenue-chart-error-details').text('Không có dữ liệu thực.');
                        $('#revenue-chart-error').show();
                    }
                    
                    // Tạo biểu đồ
                    const chart = new Chart(canvas, {
                        type: 'line',
                        data: {
                            labels: chartData.labels,
                            datasets: [
                                {
                                    label: 'Doanh thu (₫)',
                                    data: chartData.revenueData,
                                    borderColor: colors.revenue,
                                    backgroundColor: 'rgba(78, 115, 223, 0.1)',
                                    borderWidth: 2,
                                    tension: 0.3,
                                    fill: true
                                },
                                {
                                    label: 'Số giao dịch',
                                    data: chartData.countData,
                                    borderColor: colors.count,
                                    backgroundColor: 'rgba(28, 200, 138, 0.1)',
                                    borderWidth: 2,
                                    tension: 0.3,
                                    fill: true,
                                    yAxisID: 'y2'
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            elements: {
                                point: {
                                    radius: 3,
                                    hoverRadius: 5
                                }
                            },
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                tooltip: {
                                    mode: 'index',
                                    intersect: false,
                                    callbacks: {
                                        label: function(context) {
                                            let label = context.dataset.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            if (context.datasetIndex === 0) {
                                                label += new Intl.NumberFormat('vi-VN').format(context.raw) + ' ₫';
                                            } else {
                                                label += context.raw;
                                            }
                                            return label;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return new Intl.NumberFormat('vi-VN').format(value) + ' ₫';
                                        }
                                    }
                                },
                                y2: {
                                    position: 'right',
                                    beginAtZero: true,
                                    grid: {
                                        drawOnChartArea: false
                                    }
                                }
                            }
                        }
                    });
                    
                    // Ẩn loading
                    $('#revenue-chart-loading').hide();
                    
                    return chart;
                } catch (error) {
                    showError('revenue-chart', 'Lỗi khi tạo biểu đồ doanh thu:', error);
                    return null;
                }
            }
            
            // Tạo biểu đồ danh mục
            function renderCategoryChart() {
                try {
                    // Lấy phần tử canvas
                    const canvas = document.getElementById('categoryChart');
                    if (!canvas) {
                        throw new Error("Không tìm thấy phần tử canvas");
                    }
                    
                    // Xác định dữ liệu
                    let chartData;
                    if (hasValidData(rawCategoryData)) {
                        chartData = {
                            labels: rawCategoryData.map(c => c.category || "Không xác định"),
                            values: rawCategoryData.map(c => c.revenue || 0)
                        };
                    } else {
                        chartData = createDummyData();
                        $('#category-chart-error-details').text('Không có dữ liệu thực.');
                        $('#category-chart-error').show();
                    }
                    
                    // Tạo biểu đồ
                    const chart = new Chart(canvas, {
                        type: 'doughnut',
                        data: {
                            labels: chartData.labels,
                            datasets: [{
                                data: chartData.values || chartData.categoryData[0].revenue,
                                backgroundColor: colors.categories,
                                hoverBackgroundColor: colors.categories.map(c => c + 'cc'),
                                borderWidth: 1,
                                hoverBorderWidth: 2,
                                hoverOffset: 4
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            cutout: '65%',
                            plugins: {
                                legend: {
                                    position: 'right',
                                    labels: {
                                        boxWidth: 12,
                                        padding: 15
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = context.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            label += new Intl.NumberFormat('vi-VN').format(context.raw) + ' ₫';
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                    
                    // Ẩn loading
                    $('#category-chart-loading').hide();
                    
                    return chart;
                } catch (error) {
                    showError('category-chart', 'Lỗi khi tạo biểu đồ danh mục:', error);
                    return null;
                }
            }
            
            // Thêm thời gian trì hoãn ngắn để đảm bảo DOM đã được tải hoàn toàn
            setTimeout(function() {
                renderRevenueChart();
                renderCategoryChart();
            }, 100);
        });
    </script>
} 